 ss_star.spectra
Out[24]: 
{'synthetic_spectrum': <Spectrum1D(flux=[0.73504 ... 1.16184]  (shape=(1524,), mean=1.11190); spectral_axis=<SpectralAxis [3808. 3810. 3812. ... 6850. 6852. 6854.] Angstrom> (length=1524))>,
 'observed_spectrum': <Spectrum1D(flux=[0.77398 ... 1.17066]  (shape=(1524,), mean=1.11161); spectral_axis=<SpectralAxis [3808. 3810. 3812. ... 6850. 6852. 6854.] Angstrom> (length=1524))>,
 'residual_spectrum': <Spectrum1D(flux=[0.05031137755497555 ... 0.007534211470452608]  (shape=(1524,), mean=-0.00184); spectral_axis=<SpectralAxis [3808. 3810. 3812. ... 6850. 6852. 6854.] Angstrom> (length=1524))>}

In [25]: spectra = ss_star.spectra

In [26]:  # Crear una figura y un eje
    ...:     ...: fig, ax = plt.subplots()
    ...:     ...:
    ...:     ...: # Graficar cada espectro en el mismo eje
    ...:     ...: for label, spectrum in spectra.items():
    ...:     ...:     ax.plot(spectrum.spectral_axis.value, spectrum.flux.value, label=label)
    ...:     ...:
    ...:     ...: # Añadir etiquetas y título
    ...:     ...: ax.set_xlabel('Longitud de onda (Å)')
    ...:     ...: ax.set_ylabel('Intensidad')
    ...:     ...: ax.set_title('Espectros')
    ...:     ...: ax.legend()
    ...:     ...:
    ...:     ...: # Mostrar la gráfica
    ...:     ...: plt.show()


